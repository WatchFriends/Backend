"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = require("@angular/core");
var App = (function () {
    function App() {
    }
    return App;
}());
App = __decorate([
    core_1.Component({
        selector: "app",
        templateUrl: "\n    <div>\n        <h1>Watchfriends</h1>\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab, nihil. Asperiores voluptate ipsa sunt dolores, et fuga, nam deleniti rerum animi aspernatur quo quibusdam neque aut! Esse dignissimos eligendi quos.</p>\n    </div>\n    "
    })
], App);
exports.App = App;

"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = require("@angular/core");
var platform_browser_1 = require("@angular/platform-browser");
var forms_1 = require("@angular/forms");
var app_1 = require("./app");
var home_component_1 = require("./home.component");
var AppModule = (function () {
    function AppModule() {
    }
    return AppModule;
}());
AppModule = __decorate([
    core_1.NgModule({
        imports: [platform_browser_1.BrowserModule, forms_1.FormsModule],
        declarations: [app_1.App, home_component_1.HomePage],
        bootstrap: [app_1.App, home_component_1.HomePage]
    })
], AppModule);
exports.AppModule = AppModule;

/**
 * Created by michi on 7/12/2016.
 */
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = require("@angular/core");
var HomePage = (function () {
    function HomePage() {
        this.imageWelcome = "http://cdn1-www.comingsoon.net/assets/uploads/gallery/the-walking-dead-season-7/the-walking-dead-season-7-rick-lincoln-michonne-gurira-cci-key-art-1200x707-1.jpg";
        this.imageSeries = "https://i.ytimg.com/vi/pvqZ7di5O_8/maxresdefault.jp";
        this.imageFollowers = "http://www.ew.com/sites/default/files/i/2015/06/23/minions.jpg";
    }
    return HomePage;
}());
HomePage = __decorate([
    core_1.Component({
        selector: 'home',
        template: "\n\n<div class=\"container\">\n\n\n    <section class=\"home-section\">\n        <h1>Welcome to Watchfriends</h1>\n\n\n        <div class=\"wrapper\">\n          <!--  <h2>Watchfriends is an online platform where you can track series you have watched</h2> -->\n            <img class=\"img-home\"\n                 [src]=\"imageWelcome\"\n            >\n\n            <button class=\"btnSignUp\">Join Watchfriends</button>\n            <button class=\"btnLogin\">Already a member? Log in</button>\n\n        </div>\n    </section>\n\n    <section class=\"home-section\">\n        <h1>Series</h1>\n        <div class=\"wrapper\">\n          <!--  <h2>Searching for a serie to track?</h2> -->\n            <img class=\"img-home\" [src]=\"imageSeries\">\n\n\n            <button class=\"btnSignUp\">Explore new series</button>\n\n        </div>\n    </section>\n    <section class=\"home-section\">\n        <h1>Followers</h1>\n        <div class=\"wrapper\">\n           <!-- <h2>Choose who you want to follow </h2>\n            <h2>Keep track of their series</h2> -->\n            <img class=\"img-home\" [src]=\"imageFollowers\">\n\n\n            <button class=\"btnSignUp\">Expand your network\n            </button>\n\n        </div>\n    </section>\n\n\n</div>\n<footer>\n    <p>Copyright \u00A9 Michiel Zyde 2016</p>\n</footer>\n\n\n\n"
    })
], HomePage);
exports.HomePage = HomePage;

"use strict";
var platform_browser_dynamic_1 = require("@angular/platform-browser-dynamic");
var app_module_1 = require("./app.module");
platform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule);

var __decorate=this&&this.__decorate||function(e,n,t,o){var i,r=arguments.length,s=r<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,n,t,o);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(r<3?i(s):r>3?i(n,t,s):i(n,t))||s);return r>3&&s&&Object.defineProperty(n,t,s),s};define("app.component",["require","exports","@angular/core"],function(e,n,t){"use strict";var o=function(){function e(){this.pageTitle="WatchFriends"}return e}();o=__decorate([t.Component({selector:"wf-app",templateUrl:"<div><h1>{{pageTitle}}</h1>\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab, nihil. Asperiores voluptate ipsa sunt dolores, et fuga, nam deleniti rerum animi aspernatur quo quibusdam neque aut! Esse dignissimos eligendi quos.</p>\n</div>"})],o),n.AppComponent=o}),define("app.module",["require","exports","@angular/core","@angular/platform-browser","@angular/forms","app.component"],function(e,n,t,o,i,r){"use strict";var s=function(){function e(){}return e}();s=__decorate([t.NgModule({declarations:[r.AppComponent],imports:[o.BrowserModule,i.FormsModule],bootstrap:[r.AppComponent]})],s),n.AppModule=s}),define("home.component",["require","exports","@angular/core"],function(e,n,t){"use strict";var o=function(){function e(){this.imageWelcome="http://cdn1-www.comingsoon.net/assets/uploads/gallery/the-walking-dead-season-7/the-walking-dead-season-7-rick-lincoln-michonne-gurira-cci-key-art-1200x707-1.jpg",this.imageSeries="https://i.ytimg.com/vi/pvqZ7di5O_8/maxresdefault.jp",this.imageFollowers="http://www.ew.com/sites/default/files/i/2015/06/23/minions.jpg"}return e}();o=__decorate([t.Component({selector:"home",template:'\n<div class="container">\n\n    <section class="home-section">\n        <h1>Welcome to Watchfriends</h1>\n\n        <div class="wrapper">\n            <!--  <h2>Watchfriends is an online platform where you can track series you have watched</h2> -->\n            <img class="img-home" [src]="imageWelcome" />\n\n            <button class="btnSignUp">Join Watchfriends</button>\n            <button class="btnLogin">Already a member? Log in</button>\n        </div>\n    </section>\n\n    <section class="home-section">\n        <h1>Series</h1>\n        <div class="wrapper">\n            <!--  <h2>Searching for a serie to track?</h2> -->\n            <img class="img-home" [src]="imageSeries"/>\n\n            <button class="btnSignUp">Explore new series</button>\n        </div>\n    </section>\n\n    <section class="home-section">\n        <h1>Followers</h1>\n        <div class="wrapper">\n            <!-- <h2>Choose who you want to follow </h2>\n            <h2>Keep track of their series</h2> -->\n            <img class="img-home" [src]="imageFollowers"/>\n\n            <button class="btnSignUp">Expand your network</button>\n        </div>\n    </section>\n\n</div>'})],o),n.HomePage=o}),define("main",["require","exports","@angular/platform-browser-dynamic","app.module"],function(e,n,t,o){"use strict";t.platformBrowserDynamic().bootstrapModule(o.AppModule)});var Achievement=function(){function e(){}return e}(),AchievementType=function(){function e(){}return e}(),Series=function(){function e(){}return e}(),Season=function(){function e(){}return e}(),Episode=function(){function e(){}return e}(),User=function(){function e(){}return e}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
